---common ansible commands usage----
create 3 instances - ansible-controller , ansible node1 , ansible node2 -> connect , set hostname 
put the entry of ip and hostname in /etc/hosts file
generate ssh key on controller and copy it under authorized keys in node1 and node 2
install anisble only on controller
#cd /etc/ansible
#vim hosts
[dev-servers]
worker1-server
[prod-server]
worker2-server
*ping command :- ansible all -m ping
*ping with desired output :- ansible all -m ping -a data=hello
*to add user :- ansible all -m user -a 'name=mansi uid=1200 home=/ltimindtree state=present'
check in target machine using :- cat /etc/passwd | grep -i mansi
to create a file :- ansible all -m file -a 'path=/tmp/mansi.txt state=touch'
to create a directory :- ansible all -m file -a 'path=/tmp/mydirectory state=directory' 
to pull something from the target to controller:- ansible worker1-server -m fetch -a 'src=/tmp/mansi.txt dest=/mnt'
to copy:- ansible all -m copy -a 'src=/etc/fstab dest=/tmp'
to see disk info :- ansible all -m command -a 'df -hT'
to see partition info :- ansible all -m command -a 'fdisk -l'

----working with playbook-----------
#cd /etc/ansible
#mkdir project-x
vim sample-playbook.yaml
---
- name: this is sample playbook
  hosts: all
  tasks:
    - name: creating user
      user:
        name: sachin
        uid: 1300
        home: /heros
        shell: /bin/bash
        state: present
    - name: installing apache
      yum:
        name: httpd
        state: present
    - name: install cifs
      yum:
        name: cifs-utils
        state: present
    - name: install vsftpd
      dnf:
        name: vsftpd
        state: latest
...
# ansible-playbook sample-playbook.yaml --syntax-check
#ansible-playbook sample-playbook.yaml -C
#ansible-playbook sample-playbook.yaml
verification on target
rpmquery httpd
   31  rpmquery vsftpd
   32  rpmquery cifs-utils
   33  cat /etc/passwd | grep -i sachin

----configuring basic apache server ---------
